worker_processes  auto;

events {
    worker_connections  1024;
}

http {
    resolver 127.0.0.11 ipv6=off;

    lua_package_path "/usr/local/openresty/lualib/lua-resty-openidc/?.lua;;";

    server {
       listen 8080;

       location / {
           access_by_lua_block {
               local cjson = require "cjson"

               local opts = {
                   redirect_uri_path = "/callback",
                   discovery = "http://keycloak:8080/realms/example/.well-known/openid-configuration",
                   client_id = "YOUR-CLIENT-ID",
                   client_secret = "YOUR-SECRET",
               }

               local res, err = require("resty.openidc").authenticate(opts)

               if err then
                   ngx.status = 403
                   ngx.say(err)
                   ngx.exit(ngx.HTTP_FORBIDDEN)
               end

               ngx.req.set_header("Authorization", "Bearer "..res.access_token)
           }

           proxy_pass http://host.docker.internal:8082;
       }
    }
}

